inputs: ["transactions", "product", "date", "dim_product"]
transformations :
    - input: "product"
      alias: "product_filtered"
      sql: "select product_id, product_desc as product from product where product_desc != 'N.A.'"
    - input: "transactions"
      alias: "trxn_transformed"
      actions:
        - {type: rename, list: {id: "trxn_id" , loc: "location"}}
        - {type: transform, list: {location: "lower(location)", trxn_id: "concat(trxn_id, location)", rank: "RANK() OVER (PARTITION BY location order by date desc)"}}
        - {type: join, with: "product_filtered",  columns: ["product"] , join_type: inner}
        - {type: join, with: "date", columns: ["date"], join_type: inner}
        - {type: select_not, columns: ["location"]}
    - input: "transactions"
      alias: "grp_by"
      actions:
        - {type: "group_by", columns: ["product"], expr: "count(product) as p_cnt"}
        - {type: "order_by", columns: ["p_cnt:desc"]}
    - input : "product"
      alias: "scd_product"
      persist: true
      actions:
        - {type: "scd", dim_table: "dim_product", sk_column: "product_key", natural_keys: ["product_id"], derived_columns: ["derived_attr"], meta_columns: ["last_updated_date"]}
    - input: "scd_product"
      alias: "insert_update"
      actions:
        - {type: filter, condition: "scd_status = 'INSERT' OR scd_status = 'UPDATE'"}
        - {type: transform, list: {last_updated_date: "current_date"}}
        - {type: sequence, sk_source: "dim_product", sk_column: "product_key"}
    - input: "scd_product"
      alias: "final_dim_out"
      actions:
        - {type: filter, condition: "scd_status = 'NCD'"}
        - {type: union, with: ["insert_update"]}
    - input: "final_dim_out"
      alias: "distinct_test"
      actions:
         - {type: union, with: ["final_dim_out"]}
         - {type: distinct}
    - input: "transactions"
      alias: "drop_duplicate_test"
      actions:
         - {type: drop_duplicates, columns: ["product"]}