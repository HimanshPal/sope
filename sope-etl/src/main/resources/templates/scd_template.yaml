# SCD Template
# =================
# Performs scd comparison for provided Dimension table

# Placeholders:
# 1 -> Surrogate Key Column
# 2 -> Primary key Columns
# 3 -> Derived columns (Will be skipped for SCD comparisons, but values will stay intact for Update & NCD records
# 4 -> Meta Columns (e.g. date columns identifying updates. This will be skipped for SCD comparison. Make sure to
#       Update this template to set new values for Meta columns in case for Insert/Update records.
# The Output from this template can then be used to perform Type 1/Type 2 SCD as desired.
#
# *Updates Needed to Template*
# ---------------------------
# 1. update the required date meta column. Currently defaults tp 'last_update_date'. line no 31
#
# Output alias to be used:
# scd_result -> Union of insert_update & ncd
inputs: ["scd_input", "dimension"]
transformations :
    - input : "scd_input"
      alias: "scd_product"
      persist: "memory_only"
      actions:
        - {type: "scd", dim_table: "dimension", sk_column: $1 , natural_keys: $2 , derived_columns: $3 , meta_columns: $4}
    #Filter insert/updates and adds 'last_updated_date' column, Note: Update the name of the column is required
    - input: "scd_product"
      alias: "insert_update"
      coalesce: 200
      actions:
        - {type: filter, condition: "scd_status = 'INSERT' OR scd_status = 'UPDATE'"}
        - {type: transform, list: {last_updated_date: "current_date()"}}
        - {type: sequence, sk_source: "dimension", sk_column: $1}
    - input: "scd_product"
      alias: "ncd"
      coalesce: 200
      actions:
        - {type: filter, condition: "scd_status = 'NCD'"}
    - input: "ncd"
      alias: "scd_result"
      actions:
        - {type: union, with: ["insert_update"]}